{"ast":null,"code":"var _jsxFileName = \"/home/anurag-singh-us/logicwind/clonibg/GraphQl/client/src/DisplayData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useQuery, gql, useLazyQuery, useMutation } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUERY_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      age\n    }\n  }\n`;\nconst QUERY_ALL_MOVIES = gql`\n  query GetMovies {\n    movies {\n      name\n      isInTheaters\n    }\n  }\n`;\nconst GET_MOVIE_BY_NAME = gql`\n  query Movie($name: String!) {\n    movie(name: $name) {\n      name\n      yearOfPublications\n    }\n  }\n`;\n\n// mutation CreateUser($input: createUser!){\n//   #   createUser(input: $input) {\n//   #     id\n//   #     name\n//   #     age\n//   #   }\n//   # }\n\nconst CREATE_USER = gql`\nmutation CreateUser($input:createUserInput!){\ncreateUser(input:$input){\nid\nname\n}\n}\n`;\n\n// uery GetSingleMovieByName($name: String!) {\n//   movie(name: $name) {\n//   name\n//   yearOfPublications\n//   }\n// }\nconst DisplayData = () => {\n  _s();\n  //InputTag State for MOvies;\n  const [moviesSearched, setMovieSearched] = useState(\"\");\n\n  // Create UserName States\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [nationality, setNationality] = useState(\"\");\n\n  //Here I am showing the exaples of useQuery \n  const {\n    data,\n    loading,\n    refetch\n  } = useQuery(QUERY_ALL_USERS);\n  const {\n    data: Moviedata\n  } = useQuery(QUERY_ALL_MOVIES);\n\n  //Here I am showing the examples of useLazyQuery()\n  const [fetchMovie, {\n    data: moviesSearchedData,\n    error: movieError\n  }] = useLazyQuery(GET_MOVIE_BY_NAME);\n\n  //UseMutaion for creating and Updating the Data  \n  const [createUser] = useMutation(CREATE_USER);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"..........Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }, this);\n  }\n  if (data) {\n    console.log(data);\n  }\n  // if (movieError) {\n  //   console.log(movieError);\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name...\",\n        onChange: event => {\n          setName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Age...\",\n        onChange: event => {\n          setAge(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username...\",\n        onChange: event => {\n          setUsername(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nationality...\",\n        onChange: event => {\n          setNationality(event.target.value.toUpperCase());\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          createUser({\n            variables: {\n              input: {\n                name,\n                username,\n                age: Number(age),\n                nationality\n              }\n            }\n          });\n        },\n        children: \" Create Store \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Interstellar...\",\n      onChange: event => {\n        setMovieSearched(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        fetchMovie({\n          variables: {\n            name: moviesSearched\n          }\n        });\n        refetch();\n      },\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [moviesSearchedData && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\", /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"MovieName: \", moviesSearchedData.movie.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), movieError && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"There Was An Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(DisplayData, \"Bz2L6WDfLYb+O68QFJeaye0KNv8=\", false, function () {\n  return [useQuery, useQuery, useLazyQuery, useMutation];\n});\n_c = DisplayData;\nexport default DisplayData;\nvar _c;\n$RefreshReg$(_c, \"DisplayData\");","map":{"version":3,"names":["React","useState","useQuery","gql","useLazyQuery","useMutation","jsxDEV","_jsxDEV","QUERY_ALL_USERS","QUERY_ALL_MOVIES","GET_MOVIE_BY_NAME","CREATE_USER","DisplayData","_s","moviesSearched","setMovieSearched","name","setName","username","setUsername","age","setAge","nationality","setNationality","data","loading","refetch","Moviedata","fetchMovie","moviesSearchedData","error","movieError","createUser","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","type","placeholder","onChange","event","target","value","toUpperCase","onClick","variables","input","Number","movie","_c","$RefreshReg$"],"sources":["/home/anurag-singh-us/logicwind/clonibg/GraphQl/client/src/DisplayData.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useQuery, gql, useLazyQuery, useMutation } from \"@apollo/client\";\n\nconst QUERY_ALL_USERS = gql`\n  query GetAllUsers {\n    users {\n      id\n      name\n      age\n    }\n  }\n`;\nconst QUERY_ALL_MOVIES = gql`\n  query GetMovies {\n    movies {\n      name\n      isInTheaters\n    }\n  }\n`;\n\nconst GET_MOVIE_BY_NAME = gql`\n  query Movie($name: String!) {\n    movie(name: $name) {\n      name\n      yearOfPublications\n    }\n  }\n`;\n\n// mutation CreateUser($input: createUser!){\n//   #   createUser(input: $input) {\n//   #     id\n//   #     name\n//   #     age\n//   #   }\n//   # }\n\nconst CREATE_USER = gql`\nmutation CreateUser($input:createUserInput!){\ncreateUser(input:$input){\nid\nname\n}\n}\n`\n\n// uery GetSingleMovieByName($name: String!) {\n//   movie(name: $name) {\n//   name\n//   yearOfPublications\n//   }\n// }\nconst DisplayData = () => {\n  //InputTag State for MOvies;\n  const [moviesSearched, setMovieSearched] = useState(\"\");\n\n  // Create UserName States\n  const [name, setName] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [age, setAge] = useState(0);\n  const [nationality,setNationality] = useState(\"\")\n\n  //Here I am showing the exaples of useQuery \n  const { data, loading, refetch } = useQuery(QUERY_ALL_USERS);\n  const { data: Moviedata } = useQuery(QUERY_ALL_MOVIES);\n\n  //Here I am showing the examples of useLazyQuery()\n  const [fetchMovie, { data: moviesSearchedData, error: movieError }] =\n  useLazyQuery(GET_MOVIE_BY_NAME);\n\n  //UseMutaion for creating and Updating the Data  \n  const [createUser] = useMutation(CREATE_USER);\n\n  if (loading) { return <h1>..........Loading</h1> }\n\n  if(data){console.log(data)}\n  // if (movieError) {\n  //   console.log(movieError);\n  // }\n\n  return (\n    <div>\n      <div>\n        <input\n          type=\"text\"\n          placeholder=\"Name...\"\n          onChange={(event) => {\n            setName(event.target.value);\n          }}\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Age...\"\n          onChange={(event) => {\n            setAge(event.target.value);\n          }}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Username...\"\n          onChange={(event) => {\n            setUsername(event.target.value);\n          }}\n        />\n          <input\n          type=\"text\"\n          placeholder=\"Nationality...\"\n          onChange={(event) => {\n            setNationality(event.target.value.toUpperCase());\n          }}\n        />\n        <button onClick={() => {createUser({variables:{input:{\n          name, username, age:Number(age), nationality\n        }}})}}> Create Store </button>\n      </div>\n      \n\n     <br/>\n     <br/>\n\n      <input\n        type=\"text\"\n        placeholder=\"Interstellar...\"\n        onChange={(event) => {\n          setMovieSearched(event.target.value);\n        }}\n      />\n      <button\n        onClick={() => {\n          fetchMovie({ variables: { name: moviesSearched } });\n          refetch();\n        }\n          \n          \n          \n        }\n      >\n        Fetch Data\n      </button>\n      <div>\n        {moviesSearchedData && (\n          <div>\n            {\"\"}\n            <h1>MovieName: {moviesSearchedData.movie.name}</h1>\n          </div>\n        )}\n        {movieError && <h1>There Was An Error:</h1>}\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayData;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}